// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using storage.Persistence;

namespace storage.Migrations
{
    [DbContext(typeof(StorageDbContext))]
    [Migration("20190710041452_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "3.0.0-preview5.19227.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("storage.Domain.Models.Keyword", b =>
                {
                    b.Property<int>("KeywordId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Text");

                    b.HasKey("KeywordId");

                    b.ToTable("Keywords");
                });

            modelBuilder.Entity("storage.Domain.Models.Sentence", b =>
                {
                    b.Property<int>("SentenceId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("KeywordId");

                    b.Property<bool>("Positive");

                    b.Property<DateTime>("Received");

                    b.Property<string>("SourceArticleHeader");

                    b.Property<string>("SourceArticleUrl");

                    b.Property<int>("SourceId");

                    b.Property<string>("Text");

                    b.HasKey("SentenceId");

                    b.HasIndex("KeywordId");

                    b.HasIndex("SourceId");

                    b.ToTable("Sentences");
                });

            modelBuilder.Entity("storage.Domain.Models.Source", b =>
                {
                    b.Property<int>("SourceId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Url");

                    b.HasKey("SourceId");

                    b.ToTable("Sources");
                });

            modelBuilder.Entity("storage.Domain.Models.Sentence", b =>
                {
                    b.HasOne("storage.Domain.Models.Keyword", "Keyword")
                        .WithMany("Sentences")
                        .HasForeignKey("KeywordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("storage.Domain.Models.Source", "Source")
                        .WithMany("Sentences")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
